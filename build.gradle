plugins {
    id "dev.architectury.loom" version "0.12.0-SNAPSHOT"
    id "maven-publish"
    id "io.github.juuxel.loom-quiltflower" version "1.+" // Quiltflower, a better decompiler
}

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_17

String versionSuffix = !((String) project.mod_version).contains("dev") ?: "." + releaseTime();
archivesBaseName = project.archives_base_name
version = project.mod_version + versionSuffix + "+mc" + project.minecraft_version
group = project.maven_group

def releaseTime() {
    return new Date().format("yyyyMMddHHmm", TimeZone.getTimeZone("GMT+08:00"))
}

loom {
    silentMojangMappingsLicense()

    forge {
        mixinConfigs = [
                "lead_beyond.mixins.json"
        ]
        dataGen {
            mod project.mod_id
        }
    }

    launches {
        data {
            arg "--existing", file("src/main/resources").absolutePath
        }
    }
}

repositories {
    maven {
        url = "https://maven.tterrag.com/"
    }
    maven {
        url = "https://maven.shedaniel.me/"
    }
    maven {
        url = "https://maven.quiltmc.org/repository/release"
    }
    maven {
        url = "https://maven.parchmentmc.org"
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings(loom.layered {
        it.mappings("org.quiltmc:quilt-mappings:${project.minecraft_version}+build.${project.qm_version}:intermediary-v2")
		it.parchment("org.parchmentmc.data:parchment-${project.minecraft_version}:${project.parchment_version}@zip")
		it.officialMojangMappings { nameSyntheticMembers = false }
	})

    forge "net.minecraftforge:forge:${project.forge_version}"

    modImplementation("com.simibubi.create:create-1.18.2:${project.create_version}:slim") { transitive = false }
    modImplementation "com.jozufozu.flywheel:flywheel-forge-1.18.2:${project.flywheel_version}"
    modImplementation include("com.tterrag.registrate:Registrate:MC${project.minecraft_version}-${project.registrate_version}")

    modImplementation include("me.shedaniel.cloth:cloth-config-forge:6.4.90")
}

processResources {
    // define properties that can be used during resource processing
    inputs.property "version", project.version

    // this will replace the property "${version}" in your mods.toml
    // with the version you've defined in your gradle.properties
    filesMatching("META-INF/mods.toml") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile) {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    options.encoding = "UTF-8"
    options.release = 17
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    // add some additional metadata to the jar manifest
    manifest {
        attributes([
                "Specification-Title"     : project.mod_id,
                "Specification-Vendor"    : project.mod_author,
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : version,
                "Implementation-Vendor"   : project.mod_author,
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}
